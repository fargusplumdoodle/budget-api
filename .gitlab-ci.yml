stages:
  - release
  - qa
  - build
  - deploy

variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DEBUG: "FALSE"
  SECRET_KEY: "SECRET_KEY"
  DEBIAN_FRONTEND: noninteractive
  IMAGE: hub.sekhnet.ra/budget-api
  CI: "TRUE"
  NAMESPACE: budget


default:
  image: hub.sekhnet.ra/python39-ci:latest
  cache:
    paths:
      - ./venv/

test:
  stage: qa
  services:
    - "postgres:latest"
  variables:
    DB: postgres
    DB_HOST: postgres
    DB_USER: postgres
    DB_PASS: postgres
  script:
    - ./venv/bin/python manage.py test

migrations_check:
  stage: qa
  services:
    - "postgres:latest"
  script:
    - ./venv/bin/python manage.py makemigrations --check

format:
  stage: qa
  script:
    - ./venv/bin/black --check .

flake8:
  stage: qa
  script:
    - ./venv/bin/flake8 --config .flake8 ./api2 ./budget

# Not implmented
#type_check:
  #stage: qa
  #script:
    #- ./venv/bin/mypy --config-file .mypy .


build-dev:
  image: docker:latest
  stage: build
  only:
    - dev
  before_script: []
  services: []
  script:
    - docker pull $IMAGE:latest || true
    - docker build -t "$IMAGE:dev" -t "$IMAGE:$CI_COMMIT_SHA" --cache-from $IMAGE:latest .
    - docker image push --all-tags "$IMAGE"

build-prod:
  image: docker:latest
  stage: build
  before_script: []
  services: []
  only:
    - main
  script:
    - docker pull $IMAGE:latest || true
    - docker build -t "$IMAGE:latest" -t "$IMAGE:$CI_COMMIT_SHA" --cache-from $IMAGE:latest .
    - docker image push --all-tags "$IMAGE"

release:
  stage: release
  image: hub.sekhnet.ra/semantic_release:latest
  script:
    - npx semantic-release
  only:
    - main

deploy-staging:
  stage: deploy
  before_script: []
  services: []
  image: hub.sekhnet.ra/helm:latest
  only:
    - dev
  script:
    - git clone --branch dev http://gitlab-ci-token:${CI_JOB_TOKEN}@git.sekhnet.ra/sekhnet/applications/budget/budget-helm.git
    - ./budget-helm/ci/setup-ci-service-account.sh $STAGING_TOKEN $CA
    - helm upgrade -n $NAMESPACE-staging $NAMESPACE-staging ./budget-helm/budget --set=api.image.tag="$CI_COMMIT_SHA" --reuse-values --atomic

deploy-prod:
  stage: deploy
  before_script: []
  services: []
  image: hub.sekhnet.ra/helm:latest
  only:
    - main
  script:
    - git clone --branch main http://gitlab-ci-token:${CI_JOB_TOKEN}@git.sekhnet.ra/sekhnet/applications/budget/budget-helm.git
    - ./budget-helm/ci/setup-ci-service-account.sh $PROD_TOKEN $CA
    - helm upgrade -n $NAMESPACE $NAMESPACE ./budget-helm/budget --set=api.image.tag="$CI_COMMIT_SHA" --reuse-values --atomic
